
-------------------------------------------------------------------------------------------------------------
LISTA DE TAREAS PENDIENTES - TODO LIST

Lista de mecanismos y herramientas que se irán incorporando (o no) en próximas 
versiones del framework FastLight.

Autor: Robert Sallent
Última revisión: 02/08/25

Los cambios marcados con un ? están en fase de evaluación, no es seguro
que se implementen.

-------------------------------------------------------------------------------------------------------------
- CONFIG
	- (v2.x) Ficheros de configuración de entorno.
	- (v2.x) helper env()

- CORE/HTTP
	- (v2.x) Router que combine bien con el dispatcher actual (rutas por defecto).
	- (v2.x) Middleware.
	- (v2.x) Nuevos middlewares: CSRF, modo mantenimiento, usuario bloqueado.
	
- LIBRARIES
	- Mejorar el método XML::encode() para que sea recursivo y testearlo a fondo. Probarlo con APIs.
	- Implementar el método CSV::decode()
	- Mejorar la clase Email.
	- Templated emails.

- MODELO
	- ? Nuevo método Model::insertRelated(entidadA, entidadB, ?tabla) que inserta en la tabla intermedia en relaciones N a N.
	- ? Trabajar con snake case en la BDD en lugar de lowercase
	- (v2.x) Trabajar con sentencias preparadas, para mejorar la seguridad (importante)
		
- TEMPLATES Y VISTAS
	- Añadir herramientas JS para formularios
	- Añadir herramientas para videos (lista de reproducción...)
	- ? Hacer uso de <dialog> para modales
	- (v2.x) Uso de componentes en las vistas.
		- Componente modal
		- Componente tabla (datos en json?)
		- Componente tarjeta (card)
		- Componente paginación
		- Componente filtro de búsqueda
		- Componente login
		- Otros componentes...

- TEST Y DOCUMENTACIÓN
	- (En proceso): Mejorar la documentación y los ejemplos en los test.
	- (En proceso): Añadir docblocks en todas las librerías.
	- Crear documentación web a partir de los docblocks.
	
- HELPERS
	- ? helper json() que retorna una JsonResponse
	- ? helper xml() que retorna una XmlResponse
	- ? helper csv() que retorna una CsvResponse
		
- API
	- implementar mecanismo de API Keys	
	- Arreglar XmlResponse para que trabaje correctamente con XML::encode() (una vez que esté revisado)

- PETICIONES ASÍNCRONAS.
	- Añadir un controlador específico para procesar las peticiones asíncronas y retornar respuestas JSON (XML?)

- EXTRAS:
	- ? En la vista del listado de errores, mostrar algunos gráficos de totales con chart.js
	- Mejorar el mecanismo de password hashing para hacerlo más seguro.

-------------------------------------------------------------------------------------------------------------
 A evaluar... tal vez no se implemente por motivos docentes y se deja para los cursos de Laravel o Symfony
-------------------------------------------------------------------------------------------------------------
- Hacer uso de PSR4 para el autoload.

                